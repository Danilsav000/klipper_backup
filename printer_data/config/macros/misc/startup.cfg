
[delayed_gcode STARTUP]
initial_duration: 1
gcode:
    _STARTUP


[gcode_macro _STARTUP]
gcode:

    _CONFIGURATION_CHECK
    RUN_SHELL_COMMAND CMD=system_info
    _INIT_SB_LEDS
    _INIT_CASELIGHT
    _QUERY_FILTER_CHECK
    #_MCU_FIXING
    RESPOND MSG="Printer started and ready!"


[gcode_macro _INIT_SB_LEDS]
gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
            STATUS_LEDS COLOR="READY"
    {% endif %}

    {% if printer["gcode_macro _USER_VARIABLES"].status_leds_caselight_enabled %}
            STATUS_LEDS COLOR="READY"
    {% endif %}


[gcode_macro _INIT_CASELIGHT]
gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].caselight_enabled and printer["gcode_macro _USER_VARIABLES"].caselight_on_at_startup %}
            CASELIGHT_ON S={light_intensity_printing}
              
    {% endif %}

[gcode_macro _QUERY_FILTER_CHECK]
gcode:
  {% set filter_enabled = printer["gcode_macro _USER_VARIABLES"].filter_enabled %}

  {% if filter_enabled %}
     QUERY_AIR_FILTER
  {% endif %}

[gcode_macro _CONFIGURATION_CHECK]
gcode:
  #checking exist hardware configuration files
  {% set resonance_tester_set = printer["gcode_macro _USER_VARIABLES"].resonance_tester_set %}
  {% set x_axes_set = printer["gcode_macro _USER_VARIABLES"].x_axes_set %}
  {% set y_axes_set = printer["gcode_macro _USER_VARIABLES"].y_axes_set %}
  {% set z_axes_set = printer["gcode_macro _USER_VARIABLES"].z_axes_set %}
  {% set x_axes_driver_set = printer["gcode_macro _USER_VARIABLES"].x_axes_driver_set %}
  {% set y_axes_driver_set = printer["gcode_macro _USER_VARIABLES"].y_axes_driver_set %}
  {% set z_axes_driver_set = printer["gcode_macro _USER_VARIABLES"].z_axes_driver_set %}
  {% set extruder_driver_set = printer["gcode_macro _USER_VARIABLES"].extruder_driver_set %}
  {% set bed_heater_set = printer["gcode_macro _USER_VARIABLES"].bed_heater_set %}
  {% set extruder_set = printer["gcode_macro _USER_VARIABLES"].extruder_set %}
  {% set hotend_fan_set = printer["gcode_macro _USER_VARIABLES"].hotend_fan_set %}
  {% set part_fan_set = printer["gcode_macro _USER_VARIABLES"].part_fan_set %}
  {% set kinematic_set = printer["gcode_macro _USER_VARIABLES"].kinematic_set %}
  {% set probe_set = printer["gcode_macro _USER_VARIABLES"].probe_set %}
  {% set bed_mesh_set = printer["gcode_macro _USER_VARIABLES"].bed_mesh_set %}
  {% set input_shaper_set = printer["gcode_macro _USER_VARIABLES"].input_shaper_set %}
  {% set save_z_home_set = printer["gcode_macro _USER_VARIABLES"].save_z_home_set %}

  {% if not kinematic_set %}
      { action_raise_error("kinematic config file not set!") }
  {% elif not x_axes_set %}
      { action_raise_error("x axes config file not set!") }
  {% elif not y_axes_set %}
      { action_raise_error("y axes config file not set!") }
  {% elif not z_axes_set %}
      { action_raise_error("z axes config file not set!") }
  {% elif not x_axes_driver_set %}
      { action_raise_error("x axes driver config file not set!") }
  {% elif not y_axes_driver_set %}
      { action_raise_error("y axes driver config file not set!") }
  {% elif not z_axes_driver_set %}
      { action_raise_error("z axes driver config file not set!") }
  {% elif not extruder_driver_set %}
      { action_raise_error("extruder driver config file not set!") }
  {% elif not bed_heater_set %}
      { action_raise_error("bed heater config file not set!") }
  {% elif not extruder_set %}
      { action_raise_error("extruder config file not set!") }
  {% elif not hotend_fan_set %}
      { action_raise_error("hotend fan config file not set!") }
  {% elif not part_fan_set %}
      { action_raise_error("part fan config file not set!") }
  {% elif not probe_set %}
      { action_raise_error("probe config file not set!") }
  {% elif not bed_mesh_set %}
      { action_raise_error("bed mesh config file not set!") }
  {% elif not input_shaper_set %}
      { action_raise_error("input shaper config file not set!") }
  {% elif not save_z_home_set %}
      { action_raise_error("save z home file not set!") }
  {% else %}
    RESPOND MSG="Printer started and ready!"
  {% endif %}
      
  
  
[gcode_macro _MCU_FIXING]
gcode:
    RUN_SHELL_COMMAND CMD=mcu_timings
    RESPOND MSG="mcu timing fixed"


  





  
  
  

  
  
  
  

  

  

  
  

  

  

  
  
  



  
